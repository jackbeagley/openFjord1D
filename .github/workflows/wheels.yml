name: Build wheels

on: [push, pull_request, release]

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          #- os: ubuntu-latest
          #  arch: x86_64
          #  fc: intel
          #  fc_ver: '2025.0'
          #- os: ubuntu-latest
          #  arch: arm64
          #  fc: gcc
          #  fc_ver: 'latest'
          #- os: windows-latest
          #  arch: x86_64
          #  fc: intel
          #  fc_ver: '2025.0'
          - os: macos-latest
            fc: gcc
            fc_ver: '12'

    steps:
      - uses: actions/checkout@v5      
        with:
          submodules: recursive

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.fc }}
          version: ${{ matrix.fc_ver }}

      - name: Install ninja
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          update: true
          install: >-
            mingw-w64-x86_64-ninja

#      - name: Specify ninja as generator and cl as C compiler
#        if: runner.os == 'Windows'
#        run: |
#          echo  "CMAKE_GENERATOR=Ninja" > $env:GITHUB_ENV
#          echo "CC=cl" > $env:GITHUB_ENV
#          echo "FC=ifx" > $env:GITHUB_ENV
      - name: Set NMake on Windows
        if: runner.os == 'Windows'
        run: |
          echo 'CMAKE_GENERATOR=Ninja' >> $env:GITHUB_ENV
          echo 'CC=cl' >> $env:GITHUB_ENV

      - uses: pypa/cibuildwheel@v3.2.0
        with:
          package-dir: .

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

    env:
      CIBW_ARCHS_MACOS: "arm64"
      CIBW_MACOS_VERSION: 14
      CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
      #CIBW_BEFORE_ALL_WINDOWS: "C:\\Program Files (x86)\\Intel\\oneAPI\\setvars.bat"
      CIBW_ARCHS: auto64

      
  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build_wheels
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/openFjord1D

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
