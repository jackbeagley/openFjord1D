name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os.os }}
    runs-on: '${{ matrix.os.os }}-latest'
    strategy:
      matrix:
        os:
          - { os: windows, shell: msys2 }
          - { os: ubuntu,  shell: bash  }
          #      - { os: macos,   shell: bash  }
    defaults:
      run:
        shell: '${{ matrix.os.shell }} {0}'
    env:
      CC: gcc
      CXX: g++
      FC: gfortran

    steps:
      - name: Install mingw on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: |
            mingw-w64-x86_64-gcc-fortran

      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.21.3

      - name: Build wheels
      #run: python -m cibuildwheel --output-dir wheelhouse
        run: pipx run cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        env:
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_BEFORE_ALL_MACOS: brew install gfortran
          #     CIBW_BEFORE_ALL_LINUX: apt update && apt install -y gfortran libopenblas-dev liblapack-dev
          #          CIBW_BEFORE_ALL_WINDOWS: choco install -y ninja
          CIBW_BUILD: cp311-*
          CIBW_SKIP: "*-win32 *-manylinux_i686"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
